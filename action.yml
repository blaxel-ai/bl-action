name: "Bl action"
description: "Github action for Blaxel, a platform for building and deploying AI agents"
author: blaxel
branding:
  color: "orange"
  icon: "bold"
inputs:
  workspace:
    description: "Blaxel workspace to deploy to"
    required: true
  apikey:
    description: "Blaxel API key"
    required: true
  deploy:
    description: "If you want to deploy to Blaxel, specify the path to the folder or the file you want to deploy"
    default: ""
    required: false
runs:
  using: "composite"
  steps:
    - name: Checkout toolkit repository
      uses: actions/checkout@v4
      with:
        repository: blaxel-ai/toolkit
        path: .bl-toolkit
        clean: false
        fetch-depth: 0
        fetch-tags: true
    - name: Install blaxel
      shell: bash
      run: |
        mkdir -p $HOME/.local/bin

        # LATEST_TAG is now available as environment variable
        cd .bl-toolkit

        # Try different approaches to get the latest release tag
        LATEST_TAG=$(git tag --sort=-version:refname | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | head -n1 2>/dev/null)
        if [ -z "$LATEST_TAG" ]; then
          # Fallback: try with less strict regex (allow more characters after version)
          LATEST_TAG=$(git tag --sort=-version:refname | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+' | grep -v -E '(rc|alpha|beta|dev|pre)' | head -n1 2>/dev/null)
        fi
        if [ -z "$LATEST_TAG" ]; then
          # Fallback: just get the latest tag
          LATEST_TAG=$(git tag --sort=-version:refname | head -n1 2>/dev/null)
        fi
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG="latest"
        fi

        cd ..
        echo "Using blaxel version: $LATEST_TAG"

        # Use the locally checked out installation script
        INSTALL_SCRIPT=".bl-toolkit/install.sh"

        if [ ! -f "$INSTALL_SCRIPT" ]; then
          echo "Error: Installation script not found at $INSTALL_SCRIPT"
          echo "Please ensure the toolkit repository was properly checked out"
          exit 1
        fi

        chmod +x "$INSTALL_SCRIPT"
        BINDIR=$HOME/.local/bin VERSION=$LATEST_TAG sh "$INSTALL_SCRIPT"

        # Verify installation
        if [ ! -f "$HOME/.local/bin/blaxel" ]; then
          echo "Error: blaxel installation failed"
          exit 1
        fi

        # Create symlink and add to PATH
        cp $HOME/.local/bin/blaxel $HOME/.local/bin/bl
        echo "$HOME/.local/bin" >> $GITHUB_PATH

        # Clean up checkout
        rm -rf .bl-toolkit
    - name: Login to Blaxel
      shell: bash
      env:
        BL_API_KEY: ${{ inputs.apikey }}
      run: bl login ${{ inputs.workspace }}
    - name: Deploy to Blaxel
      shell: bash
      if: inputs.deploy != ''
      run: bl apply -R -f ${{ inputs.deploy }}
